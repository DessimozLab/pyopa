
import cython_swps3

x = cython_swps3.AlignmentEnvironment()
#x.readFromFile('516.dat')

s1 = 'KQTASGGRPLGNMPAYTPLYENVGTSIFSKSQKEDALYRIKYEYGNGTQHATMTGGINRAATVGARPAVRPETKVKIYHDLLICYGLTVVGMEPEDIQLCASSFKYFPEYYFDYQESAINEFMCFGKIKRHSRHRYVLAGWRVATHWVITQTLNELERPVQAIRLETISSSQELIFEVLNPFNIRIRFYDHTKHRHRFGCTRLDMKALVRLLLQFAVLGSTAKDIQRSPINTDLALKLAERRNLNPNVLK'
s2 = 'RIDLSSRLQTHHRRQKTGETTLYRGDRGYRRGTDVPKLCGPETDDTAVEFDGDKFSGRMGVDETSDKPFVRISGVLYRHALIVLNFSQAGAVSDLQKELTVANINYNPSALPDPTVLVGWVQNVPHETLFKKHGQDHESAVQVIRTFAGDGMEFFDSDTRKNYSKGRPAIWIPVCRPEMMRNLSVLIGNGVYASSEGEFGQPIHAKTEASHRDMTLYLVLSGYTPNISKGALE'
#print cython_swps3.normlaizedAlignScalar(s1, s2, x)
#print cython_swps3.normalizedAlignByte(s1, s2, x)
#print cython_swps3.normalizedAlignShort(s1, s2, x)

#print "int16: GapOpen = %f, GapExt = %f, Threshold = %f" % (x.int16_gapOpen, x.int16_gapExt, x.threshold)
#print x.int16_Matrix
#print x.shortFactor()

x.columns = "A"
x.readFromFile("onlyA.dat")

print cython_swps3.normalizedAlignScalar("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", x)
print cython_swps3.normalizedAlignShort("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", x)
print cython_swps3.normalizedAlignByte("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", x)

#envs = cython_swps3.readAlignmentEnvironments('/home/machine/repos/students/2014_Ferenc_Galko_SWPS3_PY/swps3_python_extended/python/matrices')

#print cython_swps3.binaryAlignNormalized(envs, s1, s2)