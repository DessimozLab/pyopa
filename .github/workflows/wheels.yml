name: Build and upload to PyPI

# Build on every branch push, tag push, and pull request change:
on: [push, pull_request]
# Alternatively, to publish when a (published) GitHub Release is created, use the following:
# on:
#   push:
#   pull_request:
#   release:
#     types:
#       - published

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        arch: ['x86_64']
        cibw_python: ["cp*"]
        include:
           - arch: aarch64
             cibw_python: cp36-*
             os: ubuntu-latest
           - arch: aarch64
             cibw_python: cp37-*
             os: ubuntu-latest
           - arch: aarch64
             cibw_python: cp38-*
             os: ubuntu-latest
           - arch: aarch64
             cibw_python: cp39-*
             os: ubuntu-latest
           - arch: aarch64
             cibw_python: cp310-*
             os: ubuntu-latest
           - arch: arm64
             cibw_python: "cp*"
             os: macos-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.4.0
        env:
          CIBW_BUILD_VERBOSITY_MACOS: 3
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_BUILD: ${{ matrix.cibw_python }}

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  test_wheels:
    needs: [ build_wheels ]
    name: Test ${{ matrix.python-version }} ${{ matrix.arch }} wheels for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ 'ubuntu-latest', 'windows-latest', 'macos-latest' ]
        python-version: ['3.7', '3.8', '3.9','3.10']
        arch: ['x64', 'x86']
        exclude:
        - os: 'ubuntu-latest'
          arch: 'x86'
        - os: 'macos-latest'
          arch: 'x86'

    steps:
      - uses: actions/download-artifact@v2
        with:
          path: ./wheelhouse/

      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.arch }}

      - name: Install tables on ${{ matrix.python-version }}
        run: |
          pip install pytest
          pip install --no-index --find-links wheelhouse/artifact/ tables
      - name: Run tests on ${{ matrix.python-version }}
        run: |
          pytest

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
          # To test: repository_url: https://test.pypi.org/legacy/